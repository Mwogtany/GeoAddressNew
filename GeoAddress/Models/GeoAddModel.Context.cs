//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoAddress.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KEGooglePlusEntities : DbContext
    {
        public KEGooglePlusEntities()
            : base("name=KEGooglePlusEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BaseTable> BaseTables { get; set; }
        public virtual DbSet<BUSINESS> BUSINESSes { get; set; }
        public virtual DbSet<CONSTITUENCY> CONSTITUENCies { get; set; }
        public virtual DbSet<COUNTY> COUNTies { get; set; }
        public virtual DbSet<FARMER_ANIMAL_FEEDS> FARMER_ANIMAL_FEEDS { get; set; }
        public virtual DbSet<FARMER_AQUACULTURE> FARMER_AQUACULTURE { get; set; }
        public virtual DbSet<FARMER_AQUACULTURE_PRODSYS> FARMER_AQUACULTURE_PRODSYS { get; set; }
        public virtual DbSet<FARMER_CROPS> FARMER_CROPS { get; set; }
        public virtual DbSet<FARMER_EQUIPMENT> FARMER_EQUIPMENT { get; set; }
        public virtual DbSet<FARMER_LIVESTOCK> FARMER_LIVESTOCK { get; set; }
        public virtual DbSet<HEALTH_FACILITY> HEALTH_FACILITY { get; set; }
        public virtual DbSet<HOUSEHOLD> HOUSEHOLDS { get; set; }
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<SCHOOL> SCHOOLs { get; set; }
        public virtual DbSet<STATIC_AGRICULTURE_CATEGORY> STATIC_AGRICULTURE_CATEGORY { get; set; }
        public virtual DbSet<STATIC_AGRICULTURE_ITEM> STATIC_AGRICULTURE_ITEM { get; set; }
        public virtual DbSet<STATIC_AGRICULTURE_TYPE> STATIC_AGRICULTURE_TYPE { get; set; }
        public virtual DbSet<STATIC_CROPS> STATIC_CROPS { get; set; }
        public virtual DbSet<STATIC_FARMER_AQUACULTURE_PRODSYS> STATIC_FARMER_AQUACULTURE_PRODSYS { get; set; }
        public virtual DbSet<STATIC_FARMER_AQUACULTURE_SPECIES> STATIC_FARMER_AQUACULTURE_SPECIES { get; set; }
        public virtual DbSet<STATIC_FARMER_CATEGORYGROUPS> STATIC_FARMER_CATEGORYGROUPS { get; set; }
        public virtual DbSet<STATIC_FARMER_CROP_CHEMICAL_USE> STATIC_FARMER_CROP_CHEMICAL_USE { get; set; }
        public virtual DbSet<STATIC_FARMER_EQUIPMENT> STATIC_FARMER_EQUIPMENT { get; set; }
        public virtual DbSet<STATIC_FARMER_FARMSTRUCTURE> STATIC_FARMER_FARMSTRUCTURE { get; set; }
        public virtual DbSet<STATIC_FARMER_FEEDS> STATIC_FARMER_FEEDS { get; set; }
        public virtual DbSet<STATIC_FARMER_FERTILIZER> STATIC_FARMER_FERTILIZER { get; set; }
        public virtual DbSet<STATIC_FARMER_FINANCESERVICES> STATIC_FARMER_FINANCESERVICES { get; set; }
        public virtual DbSet<STATIC_FARMER_FINANCIALS> STATIC_FARMER_FINANCIALS { get; set; }
        public virtual DbSet<STATIC_FARMER_GROUPS> STATIC_FARMER_GROUPS { get; set; }
        public virtual DbSet<STATIC_FARMER_LAND_REGISTRATION> STATIC_FARMER_LAND_REGISTRATION { get; set; }
        public virtual DbSet<STATIC_FARMER_LANDPRACTICE> STATIC_FARMER_LANDPRACTICE { get; set; }
        public virtual DbSet<STATIC_FARMER_LEGAL_STATUS> STATIC_FARMER_LEGAL_STATUS { get; set; }
        public virtual DbSet<STATIC_FARMER_LIVESTOCK_PRODSYS> STATIC_FARMER_LIVESTOCK_PRODSYS { get; set; }
        public virtual DbSet<STATIC_FARMER_LIVESTOCK_SPECIES> STATIC_FARMER_LIVESTOCK_SPECIES { get; set; }
        public virtual DbSet<STATIC_FARMER_POWERSOURCE> STATIC_FARMER_POWERSOURCE { get; set; }
        public virtual DbSet<STATIC_FARMER_PRODUCTION_SYS> STATIC_FARMER_PRODUCTION_SYS { get; set; }
        public virtual DbSet<STATIC_FARMER_WATERSOURCE> STATIC_FARMER_WATERSOURCE { get; set; }
        public virtual DbSet<STATIC_HOSPITAL_LEVEL> STATIC_HOSPITAL_LEVEL { get; set; }
        public virtual DbSet<STATIC_HOUSEHOLD_GENDER> STATIC_HOUSEHOLD_GENDER { get; set; }
        public virtual DbSet<STATIC_HOUSEHOLD_MARITAL> STATIC_HOUSEHOLD_MARITAL { get; set; }
        public virtual DbSet<STATIC_HOUSEHOLD_TYPE> STATIC_HOUSEHOLD_TYPE { get; set; }
        public virtual DbSet<STATIC_REGISTER_QUESTION> STATIC_REGISTER_QUESTION { get; set; }
        public virtual DbSet<STATIC_SCHOOL_LEVEL> STATIC_SCHOOL_LEVEL { get; set; }
        public virtual DbSet<STATIC_TRAFFIC_DEFINITION> STATIC_TRAFFIC_DEFINITION { get; set; }
        public virtual DbSet<SUB_COUNTY> SUB_COUNTY { get; set; }
        public virtual DbSet<TRAFFIC> TRAFFIC { get; set; }
        public virtual DbSet<UserRoleAssignment> UserRoleAssignments { get; set; }
        public virtual DbSet<WARD> WARDs { get; set; }
        public virtual DbSet<vw_Farmer_Crops> vw_Farmer_Crops { get; set; }
        public virtual DbSet<vw_Livestock_Stock> vw_Livestock_Stock { get; set; }
        public virtual DbSet<vw_Aquaculture_ProductionSystem> vw_Aquaculture_ProductionSystem { get; set; }
        public virtual DbSet<vw_Aquaculture_Species> vw_Aquaculture_Species { get; set; }
        public virtual DbSet<STATIC_FARMER_AQUACULTURE_INPUTS> STATIC_FARMER_AQUACULTURE_INPUTS { get; set; }
        public virtual DbSet<STATIC_FARMER_AQUACULTURE_LEVELS> STATIC_FARMER_AQUACULTURE_LEVELS { get; set; }
        public virtual DbSet<STATIC_FARMER_AQUACULTURE_TYPES> STATIC_FARMER_AQUACULTURE_TYPES { get; set; }
        public virtual DbSet<FARMER_LIVESTOCK_FEEDS> FARMER_LIVESTOCK_FEEDS { get; set; }
        public virtual DbSet<vw_Livestock_Feeds> vw_Livestock_Feeds { get; set; }
        public virtual DbSet<vw_Farmer_Equipment_Qty> vw_Farmer_Equipment_Qty { get; set; }
        public virtual DbSet<STATIC_FARMER_EQUIPMENTOWNER> STATIC_FARMER_EQUIPMENTOWNER { get; set; }
        public virtual DbSet<STATIC_FARMER_LABORSOURCE> STATIC_FARMER_LABORSOURCE { get; set; }
        public virtual DbSet<FARMER> FARMERs { get; set; }
        public virtual DbSet<STATIC_FARMER_EXTENSIONPROVIDER> STATIC_FARMER_EXTENSIONPROVIDER { get; set; }
        public virtual DbSet<STATIC_FARMER_INFO_SOURCEGAP> STATIC_FARMER_INFO_SOURCEGAP { get; set; }
        public virtual DbSet<STATIC_FARMER_INFOMEDIA> STATIC_FARMER_INFOMEDIA { get; set; }
        public virtual DbSet<STATIC_FARMER_IRRIGATIONBODY> STATIC_FARMER_IRRIGATIONBODY { get; set; }
        public virtual DbSet<STATIC_FARMER_IRRIGATIONTYPES> STATIC_FARMER_IRRIGATIONTYPES { get; set; }
        public virtual DbSet<STATIC_FARMER_PREFERREDADVISORYLANGUAGE> STATIC_FARMER_PREFERREDADVISORYLANGUAGE { get; set; }
        public virtual DbSet<STATIC_FARMER_PREFERREDADVISORYPERIOD> STATIC_FARMER_PREFERREDADVISORYPERIOD { get; set; }
        public virtual DbSet<STATIC_FARMER_IRRIGATIONPROJECT> STATIC_FARMER_IRRIGATIONPROJECT { get; set; }
        public virtual DbSet<vw_Businesses> vw_Businesses { get; set; }
        public virtual DbSet<vw_Farmers> vw_Farmers { get; set; }
        public virtual DbSet<vw_HouseHolds> vw_HouseHolds { get; set; }
        public virtual DbSet<vw_Schools> vw_Schools { get; set; }
        public virtual DbSet<vw_Hospitals> vw_Hospitals { get; set; }
        public virtual DbSet<FARMER_SERVICE_REQUEST> FARMER_SERVICE_REQUEST { get; set; }
        public virtual DbSet<STATIC_FARMER_SERVICES> STATIC_FARMER_SERVICES { get; set; }
        public virtual DbSet<STATIC_FARMER_SERVICES_CATEGORY> STATIC_FARMER_SERVICES_CATEGORY { get; set; }
        public virtual DbSet<vw_Farmer_Service_Requests> vw_Farmer_Service_Requests { get; set; }
        public virtual DbSet<vw_Farmer_Services_Done> vw_Farmer_Services_Done { get; set; }
        public virtual DbSet<FARMER_SERVICE_REQUEST_DONE> FARMER_SERVICE_REQUEST_DONE { get; set; }
        public virtual DbSet<SERVICE_PROVIDER> SERVICE_PROVIDER { get; set; }
        public virtual DbSet<vw_Service_Provider> vw_Service_Provider { get; set; }
    
        public virtual ObjectResult<LoginByUsernamePassword_Result> LoginByUsernamePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginByUsernamePassword_Result>("LoginByUsernamePassword", usernameParameter, passwordParameter);
        }
    
        public virtual int proc_Ins_Livestock_Feeds(Nullable<int> baseid, Nullable<int> feedid, Nullable<int> qty)
        {
            var baseidParameter = baseid.HasValue ?
                new ObjectParameter("baseid", baseid) :
                new ObjectParameter("baseid", typeof(int));
    
            var feedidParameter = feedid.HasValue ?
                new ObjectParameter("feedid", feedid) :
                new ObjectParameter("feedid", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Ins_Livestock_Feeds", baseidParameter, feedidParameter, qtyParameter);
        }
    
        public virtual int proc_Del_Livestock_Feeds(Nullable<int> baseid, Nullable<int> feedid, Nullable<int> qty)
        {
            var baseidParameter = baseid.HasValue ?
                new ObjectParameter("baseid", baseid) :
                new ObjectParameter("baseid", typeof(int));
    
            var feedidParameter = feedid.HasValue ?
                new ObjectParameter("feedid", feedid) :
                new ObjectParameter("feedid", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Del_Livestock_Feeds", baseidParameter, feedidParameter, qtyParameter);
        }
    
        public virtual int proc_DelFarmerAquaculture(Nullable<int> baseID, Nullable<int> speciesID, Nullable<int> productID)
        {
            var baseIDParameter = baseID.HasValue ?
                new ObjectParameter("BaseID", baseID) :
                new ObjectParameter("BaseID", typeof(int));
    
            var speciesIDParameter = speciesID.HasValue ?
                new ObjectParameter("SpeciesID", speciesID) :
                new ObjectParameter("SpeciesID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DelFarmerAquaculture", baseIDParameter, speciesIDParameter, productIDParameter);
        }
    }
}
